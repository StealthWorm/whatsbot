"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/message";
exports.ids = ["pages/api/message"];
exports.modules = {

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "twilio":
/*!*************************!*\
  !*** external "twilio" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("twilio");

/***/ }),

/***/ "(api)/./pages/api/message.js":
/*!******************************!*\
  !*** ./pages/api/message.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(openai__WEBPACK_IMPORTED_MODULE_0__);\n// export default function handler(req, res) {\n//   const MessagingResponse = require('twilio').twiml.MessagingResponse;\n//   var messageResponse = new MessagingResponse();\n//   messageResponse.message('Reply goes here');\n//   // send response\n//   res.writeHead(200, {\n//   'Content-Type': 'text/xml'\n//   });\n//   res.end(messageResponse.toString());\n//   }\n\nconst configuration = new openai__WEBPACK_IMPORTED_MODULE_0__.Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst openAI = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIApi(configuration);\nasync function handler(req, res) {\n    const MessagingResponse = (__webpack_require__(/*! twilio */ \"twilio\").twiml.MessagingResponse);\n    const sentMessage = req.body.Body || \"\";\n    let replyToBeSent = \"\";\n    if (sentMessage.trim().length === 0) {\n        replyToBeSent = \"We could not get your message. Please try again\";\n    } else {\n        console.log(\"entrou no else\");\n        if (!configuration.apiKey) {\n            res.status(500).json({\n                error: {\n                    message: \"OpenAI API key not configured\"\n                }\n            });\n            return;\n        }\n        console.log(\"validou chave API\");\n        // try {\n        const completion = await openAI.createCompletion({\n            model: \"text-davinci-003\",\n            prompt: `${req.body.Body}`,\n            temperature: 0.6,\n            // n: 1,\n            max_tokens: 500,\n            stop: \"\\n\"\n        });\n        console.log(JSON.stringify(JSON.parse(completion.data.choices[0].text)));\n        replyToBeSent = removeIncompleteText(completion.data.choices[0].text);\n        console.log(replyToBeSent);\n    // } catch (error) {\n    //   if (error.response) {\n    //     replyToBeSent = error.response.data.message || \"There was an issue with the server\"\n    //   } else { \n    //     replyToBeSent = \"An error occurred during your request.\";\n    //   }\n    // }\n    }\n    const messageResponse = new MessagingResponse();\n    messageResponse.message(replyToBeSent);\n    // messageResponse.message('Reply goes here');\n    // send response\n    try {\n        res.writeHead(200, {\n            \"Content-Type\": \"text/xml\"\n        });\n        res.end(messageResponse.toString());\n    // console.log(\"passou aqui\")\n    // res.status(200).json({ text: `${messageResponse.toString()}` })\n    } catch (error) {\n        console.error(\"Error sending Twilio response:\", error);\n        res.status(500).json({\n            error: {\n                message: \"Error sending Twilio response\"\n            }\n        });\n    }\n}\nfunction removeIncompleteText(inputString) {\n    const match = inputString.match(/\\b\\.\\s\\d+/g);\n    const removeAfter = match ? inputString.slice(0, inputString.lastIndexOf(match[match.length - 1])) : inputString;\n    return removeAfter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbWVzc2FnZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSw4Q0FBOEM7QUFDOUMseUVBQXlFO0FBRXpFLG1EQUFtRDtBQUVuRCxnREFBZ0Q7QUFFaEQscUJBQXFCO0FBQ3JCLHlCQUF5QjtBQUN6QiwrQkFBK0I7QUFDL0IsUUFBUTtBQUNSLHlDQUF5QztBQUN6QyxNQUFNO0FBRTRDO0FBRWxELE1BQU1FLGdCQUFnQixJQUFJRixpREFBYUEsQ0FBQztJQUN0Q0csUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ3BDO0FBRUEsTUFBTUMsU0FBUyxJQUFJTiw2Q0FBU0EsQ0FBQ0M7QUFFZCxlQUFlTSxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUM5QyxNQUFNQyxvQkFBcUJDLHFFQUF5QztJQUVwRSxNQUFNRSxjQUFjTCxJQUFJTSxJQUFJLENBQUNDLElBQUksSUFBSTtJQUNyQyxJQUFJQyxnQkFBZ0I7SUFFcEIsSUFBSUgsWUFBWUksSUFBSSxHQUFHQyxNQUFNLEtBQUssR0FBRztRQUNuQ0YsZ0JBQWdCO0lBQ2xCLE9BQU87UUFDTEcsUUFBUUMsR0FBRyxDQUFDO1FBQ1osSUFBSSxDQUFDbkIsY0FBY0MsTUFBTSxFQUFFO1lBQ3pCTyxJQUFJWSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUNuQkMsT0FBTztvQkFDTEMsU0FBUztnQkFDWDtZQUNGO1lBQ0E7UUFDRixDQUFDO1FBQ0RMLFFBQVFDLEdBQUcsQ0FBQztRQUVaLFFBQVE7UUFDTixNQUFNSyxhQUFhLE1BQU1uQixPQUFPb0IsZ0JBQWdCLENBQUM7WUFDL0NDLE9BQU87WUFDUEMsUUFBUSxDQUFDLEVBQUVwQixJQUFJTSxJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDO1lBQzFCYyxhQUFhO1lBQ2IsUUFBUTtZQUNSQyxZQUFZO1lBQ1pDLE1BQU07UUFDUjtRQUVBWixRQUFRQyxHQUFHLENBQUNZLEtBQUtDLFNBQVMsQ0FBQ0QsS0FBS0UsS0FBSyxDQUFDVCxXQUFXVSxJQUFJLENBQUNDLE9BQU8sQ0FBQyxFQUFFLENBQUNDLElBQUk7UUFDckVyQixnQkFBZ0JzQixxQkFBcUJiLFdBQVdVLElBQUksQ0FBQ0MsT0FBTyxDQUFDLEVBQUUsQ0FBQ0MsSUFBSTtRQUNwRWxCLFFBQVFDLEdBQUcsQ0FBQ0o7SUFFZCxvQkFBb0I7SUFDcEIsMEJBQTBCO0lBQzFCLDBGQUEwRjtJQUMxRixjQUFjO0lBQ2QsZ0VBQWdFO0lBQ2hFLE1BQU07SUFDTixJQUFJO0lBQ04sQ0FBQztJQUVELE1BQU11QixrQkFBa0IsSUFBSTdCO0lBQzVCNkIsZ0JBQWdCZixPQUFPLENBQUNSO0lBQ3hCLDhDQUE4QztJQUU5QyxnQkFBZ0I7SUFDaEIsSUFBSTtRQUNGUCxJQUFJK0IsU0FBUyxDQUFDLEtBQUs7WUFDakIsZ0JBQWdCO1FBQ2xCO1FBRUEvQixJQUFJZ0MsR0FBRyxDQUFDRixnQkFBZ0JHLFFBQVE7SUFDaEMsNkJBQTZCO0lBQzdCLGtFQUFrRTtJQUNwRSxFQUFFLE9BQU9uQixPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ2hEZCxJQUFJWSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxPQUFPO2dCQUNMQyxTQUFTO1lBQ1g7UUFDRjtJQUNGO0FBQ0YsQ0FBQztBQUVELFNBQVNjLHFCQUFxQkssV0FBVyxFQUFFO0lBQ3pDLE1BQU1DLFFBQVFELFlBQVlDLEtBQUssQ0FBQztJQUNoQyxNQUFNQyxjQUFjRCxRQUFRRCxZQUFZRyxLQUFLLENBQUMsR0FBR0gsWUFBWUksV0FBVyxDQUFDSCxLQUFLLENBQUNBLE1BQU0xQixNQUFNLEdBQUcsRUFBRSxLQUFLeUIsV0FBVztJQUNoSCxPQUFPRTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2hhdHNib3QvLi9wYWdlcy9hcGkvbWVzc2FnZS5qcz9mZGY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuLy8gICBjb25zdCBNZXNzYWdpbmdSZXNwb25zZSA9IHJlcXVpcmUoJ3R3aWxpbycpLnR3aW1sLk1lc3NhZ2luZ1Jlc3BvbnNlO1xyXG5cclxuLy8gICB2YXIgbWVzc2FnZVJlc3BvbnNlID0gbmV3IE1lc3NhZ2luZ1Jlc3BvbnNlKCk7XHJcblxyXG4vLyAgIG1lc3NhZ2VSZXNwb25zZS5tZXNzYWdlKCdSZXBseSBnb2VzIGhlcmUnKTtcclxuXHJcbi8vICAgLy8gc2VuZCByZXNwb25zZVxyXG4vLyAgIHJlcy53cml0ZUhlYWQoMjAwLCB7XHJcbi8vICAgJ0NvbnRlbnQtVHlwZSc6ICd0ZXh0L3htbCdcclxuLy8gICB9KTtcclxuLy8gICByZXMuZW5kKG1lc3NhZ2VSZXNwb25zZS50b1N0cmluZygpKTtcclxuLy8gICB9XHJcblxyXG5pbXBvcnQgeyBDb25maWd1cmF0aW9uLCBPcGVuQUlBcGkgfSBmcm9tIFwib3BlbmFpXCI7XHJcblxyXG5jb25zdCBjb25maWd1cmF0aW9uID0gbmV3IENvbmZpZ3VyYXRpb24oe1xyXG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXHJcbn0pO1xyXG5cclxuY29uc3Qgb3BlbkFJID0gbmV3IE9wZW5BSUFwaShjb25maWd1cmF0aW9uKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICBjb25zdCBNZXNzYWdpbmdSZXNwb25zZSA9ICByZXF1aXJlKCd0d2lsaW8nKS50d2ltbC5NZXNzYWdpbmdSZXNwb25zZVxyXG5cclxuICBjb25zdCBzZW50TWVzc2FnZSA9IHJlcS5ib2R5LkJvZHkgfHwgJyc7XHJcbiAgbGV0IHJlcGx5VG9CZVNlbnQgPSBcIlwiO1xyXG5cclxuICBpZiAoc2VudE1lc3NhZ2UudHJpbSgpLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmVwbHlUb0JlU2VudCA9IFwiV2UgY291bGQgbm90IGdldCB5b3VyIG1lc3NhZ2UuIFBsZWFzZSB0cnkgYWdhaW5cIjtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc29sZS5sb2coXCJlbnRyb3Ugbm8gZWxzZVwiKTtcclxuICAgIGlmICghY29uZmlndXJhdGlvbi5hcGlLZXkpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgIGVycm9yOiB7XHJcbiAgICAgICAgICBtZXNzYWdlOiBcIk9wZW5BSSBBUEkga2V5IG5vdCBjb25maWd1cmVkXCIsXHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2coXCJ2YWxpZG91IGNoYXZlIEFQSVwiKTtcclxuXHJcbiAgICAvLyB0cnkge1xyXG4gICAgICBjb25zdCBjb21wbGV0aW9uID0gYXdhaXQgb3BlbkFJLmNyZWF0ZUNvbXBsZXRpb24oe1xyXG4gICAgICAgIG1vZGVsOiBcInRleHQtZGF2aW5jaS0wMDNcIiwgLy8gcmVxdWlyZWRcclxuICAgICAgICBwcm9tcHQ6IGAke3JlcS5ib2R5LkJvZHl9YCwgLy8gY29tcGxldGlvbiBiYXNlZCBvbiB0aGlzXHJcbiAgICAgICAgdGVtcGVyYXR1cmU6IDAuNiwgLy9cclxuICAgICAgICAvLyBuOiAxLFxyXG4gICAgICAgIG1heF90b2tlbnM6IDUwMCxcclxuICAgICAgICBzdG9wOiAnXFxuJ1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KEpTT04ucGFyc2UoY29tcGxldGlvbi5kYXRhLmNob2ljZXNbMF0udGV4dCkpKTtcclxuICAgICAgcmVwbHlUb0JlU2VudCA9IHJlbW92ZUluY29tcGxldGVUZXh0KGNvbXBsZXRpb24uZGF0YS5jaG9pY2VzWzBdLnRleHQpXHJcbiAgICAgIGNvbnNvbGUubG9nKHJlcGx5VG9CZVNlbnQpO1xyXG5cclxuICAgIC8vIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAvLyAgIGlmIChlcnJvci5yZXNwb25zZSkge1xyXG4gICAgLy8gICAgIHJlcGx5VG9CZVNlbnQgPSBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UgfHwgXCJUaGVyZSB3YXMgYW4gaXNzdWUgd2l0aCB0aGUgc2VydmVyXCJcclxuICAgIC8vICAgfSBlbHNlIHsgXHJcbiAgICAvLyAgICAgcmVwbHlUb0JlU2VudCA9IFwiQW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHlvdXIgcmVxdWVzdC5cIjtcclxuICAgIC8vICAgfVxyXG4gICAgLy8gfVxyXG4gIH1cclxuXHJcbiAgY29uc3QgbWVzc2FnZVJlc3BvbnNlID0gbmV3IE1lc3NhZ2luZ1Jlc3BvbnNlKCk7XHJcbiAgbWVzc2FnZVJlc3BvbnNlLm1lc3NhZ2UocmVwbHlUb0JlU2VudCk7XHJcbiAgLy8gbWVzc2FnZVJlc3BvbnNlLm1lc3NhZ2UoJ1JlcGx5IGdvZXMgaGVyZScpO1xyXG5cclxuICAvLyBzZW5kIHJlc3BvbnNlXHJcbiAgdHJ5IHtcclxuICAgIHJlcy53cml0ZUhlYWQoMjAwLCB7XHJcbiAgICAgICdDb250ZW50LVR5cGUnOiAndGV4dC94bWwnXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXMuZW5kKG1lc3NhZ2VSZXNwb25zZS50b1N0cmluZygpKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwicGFzc291IGFxdWlcIilcclxuICAgIC8vIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdGV4dDogYCR7bWVzc2FnZVJlc3BvbnNlLnRvU3RyaW5nKCl9YCB9KVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzZW5kaW5nIFR3aWxpbyByZXNwb25zZTonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgIGVycm9yOiB7XHJcbiAgICAgICAgbWVzc2FnZTogXCJFcnJvciBzZW5kaW5nIFR3aWxpbyByZXNwb25zZVwiLFxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZUluY29tcGxldGVUZXh0KGlucHV0U3RyaW5nKSB7XHJcbiAgY29uc3QgbWF0Y2ggPSBpbnB1dFN0cmluZy5tYXRjaCgvXFxiXFwuXFxzXFxkKy9nKTtcclxuICBjb25zdCByZW1vdmVBZnRlciA9IG1hdGNoID8gaW5wdXRTdHJpbmcuc2xpY2UoMCwgaW5wdXRTdHJpbmcubGFzdEluZGV4T2YobWF0Y2hbbWF0Y2gubGVuZ3RoIC0gMV0pKSA6IGlucHV0U3RyaW5nO1xyXG4gIHJldHVybiByZW1vdmVBZnRlclxyXG59Il0sIm5hbWVzIjpbIkNvbmZpZ3VyYXRpb24iLCJPcGVuQUlBcGkiLCJjb25maWd1cmF0aW9uIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwib3BlbkFJIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIk1lc3NhZ2luZ1Jlc3BvbnNlIiwicmVxdWlyZSIsInR3aW1sIiwic2VudE1lc3NhZ2UiLCJib2R5IiwiQm9keSIsInJlcGx5VG9CZVNlbnQiLCJ0cmltIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsIm1lc3NhZ2UiLCJjb21wbGV0aW9uIiwiY3JlYXRlQ29tcGxldGlvbiIsIm1vZGVsIiwicHJvbXB0IiwidGVtcGVyYXR1cmUiLCJtYXhfdG9rZW5zIiwic3RvcCIsIkpTT04iLCJzdHJpbmdpZnkiLCJwYXJzZSIsImRhdGEiLCJjaG9pY2VzIiwidGV4dCIsInJlbW92ZUluY29tcGxldGVUZXh0IiwibWVzc2FnZVJlc3BvbnNlIiwid3JpdGVIZWFkIiwiZW5kIiwidG9TdHJpbmciLCJpbnB1dFN0cmluZyIsIm1hdGNoIiwicmVtb3ZlQWZ0ZXIiLCJzbGljZSIsImxhc3RJbmRleE9mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/message.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/message.js"));
module.exports = __webpack_exports__;

})();