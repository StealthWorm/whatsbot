"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/message";
exports.ids = ["pages/api/message"];
exports.modules = {

/***/ "twilio":
/*!*************************!*\
  !*** external "twilio" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("twilio");

/***/ }),

/***/ "(api)/./pages/api/message.js":
/*!******************************!*\
  !*** ./pages/api/message.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nfunction handler(req, res) {\n    const MessagingResponse = (__webpack_require__(/*! twilio */ \"twilio\").twiml.VoiceResponse);\n    var messageResponse = new MessagingResponse();\n    // messageResponse.message('Reply goes here');\n    // send response\n    res.writeHead(200, {\n        \"Content-Type\": \"text/xml\"\n    });\n    messageResponse.dial({\n        action: \"/api/message\",\n        method: \"POST\",\n        timeLimit: 60,\n        callerId: req.body.To\n    }, \"+5542920003054\");\n    res.send(messageResponse.toString());\n} // import { Configuration, OpenAIApi } from \"openai\";\n // const configuration = new Configuration({\n //   apiKey: process.env.OPENAI_API_KEY,\n // });\n // // const client = require('twilio')(process.env.TWILIO_ACCOUNT_SID, process.env.TWILIO_AUTH_TOKEN)\n // const openAI = new OpenAIApi(configuration);\n // // https://whatsbot-kappa.vercel.app/api/message\n // export default async function handler(req, res) {\n //   const MessagingResponse = require('twilio').twilio.MessagingResponse\n //   const sentMessage = req.body.Body || '';\n //   let replyToBeSent = \"\";\n //   if (sentMessage.trim().length === 0) {\n //     replyToBeSent = \"We could not get your message. Please try again\";\n //   } else {\n //     console.log(\"entrou no else\");\n //     if (!configuration.apiKey) {\n //       res.status(500).json({\n //         error: {\n //           message: \"OpenAI API key not configured\",\n //         }\n //       });\n //       return;\n //     }\n //     console.log(\"validou chave API\");\n //     // try {\n //     const completion = await openAI.createCompletion({\n //       model: \"text-davinci-003\", // required\n //       prompt: `${req.body.Body}`, // completion based on this\n //       temperature: 0.6, //\n //       // n: 1,\n //       max_tokens: 500,\n //       stop: '\\n'\n //     });\n //     console.log(JSON.stringify(JSON.parse(completion.data.choices[0].text)));\n //     replyToBeSent = removeIncompleteText(completion.data.choices[0].text)\n //     // } catch (error) {\n //     //   if (error.response) {\n //     //     replyToBeSent = error.response.data.message || \"There was an issue with the server\"\n //     //   } else {\n //     //     replyToBeSent = \"An error occurred during your request.\";\n //     //   }\n //     // }\n //   }\n //   const messageResponse = new MessagingResponse();\n //   messageResponse.message(replyToBeSent);\n //   // messageResponse.message('Reply goes here');\n //   // send response\n //   try {\n //     res.writeHead(200, {\n //       'Content-Type': 'text/xml'\n //     });\n //     res.end(messageResponse.toString());\n //   } catch (error) {\n //     console.error('Error sending Twilio response:', error);\n //     res.status(500).json({\n //       error: {\n //         message: \"Error sending Twilio response\",\n //       }\n //     });\n //   }\n // }\n // function removeIncompleteText(inputString) {\n //   const match = inputString.match(/\\b\\.\\s\\d+/g);\n //   const removeAfter = match ? inputString.slice(0, inputString.lastIndexOf(match[match.length - 1])) : inputString;\n //   return removeAfter\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbWVzc2FnZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsU0FBU0EsUUFBUUMsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDeEMsTUFBTUMsb0JBQW9CQyxpRUFBcUM7SUFFL0QsSUFBSUcsa0JBQWtCLElBQUlKO0lBRTFCLDhDQUE4QztJQUU5QyxnQkFBZ0I7SUFDaEJELElBQUlNLFNBQVMsQ0FBQyxLQUFLO1FBQ25CLGdCQUFnQjtJQUNoQjtJQUNBRCxnQkFBZ0JFLElBQUksQ0FBQztRQUNuQkMsUUFBUTtRQUNSQyxRQUFRO1FBQ1JDLFdBQVc7UUFDWEMsVUFBVVosSUFBSWEsSUFBSSxDQUFDQyxFQUFFO0lBQ3ZCLEdBQUc7SUFFSGIsSUFBSWMsSUFBSSxDQUFDVCxnQkFBZ0JVLFFBQVE7QUFDbkMsQ0FBQyxDQUVELHFEQUFxRDtDQUVyRCw0Q0FBNEM7Q0FDNUMsd0NBQXdDO0NBQ3hDLE1BQU07Q0FFTixxR0FBcUc7Q0FFckcsK0NBQStDO0NBQy9DLG1EQUFtRDtDQUNuRCxvREFBb0Q7Q0FDcEQseUVBQXlFO0NBRXpFLDZDQUE2QztDQUM3Qyw0QkFBNEI7Q0FFNUIsMkNBQTJDO0NBQzNDLHlFQUF5RTtDQUN6RSxhQUFhO0NBQ2IscUNBQXFDO0NBQ3JDLG1DQUFtQztDQUNuQywrQkFBK0I7Q0FDL0IsbUJBQW1CO0NBQ25CLHNEQUFzRDtDQUN0RCxZQUFZO0NBQ1osWUFBWTtDQUNaLGdCQUFnQjtDQUNoQixRQUFRO0NBQ1Isd0NBQXdDO0NBRXhDLGVBQWU7Q0FDZix5REFBeUQ7Q0FDekQsK0NBQStDO0NBQy9DLGdFQUFnRTtDQUNoRSw2QkFBNkI7Q0FDN0IsaUJBQWlCO0NBQ2pCLHlCQUF5QjtDQUN6QixtQkFBbUI7Q0FDbkIsVUFBVTtDQUVWLGdGQUFnRjtDQUNoRiw0RUFBNEU7Q0FFNUUsMkJBQTJCO0NBQzNCLGlDQUFpQztDQUNqQyxpR0FBaUc7Q0FDakcsb0JBQW9CO0NBQ3BCLHVFQUF1RTtDQUN2RSxhQUFhO0NBQ2IsV0FBVztDQUNYLE1BQU07Q0FFTixxREFBcUQ7Q0FDckQsNENBQTRDO0NBQzVDLG1EQUFtRDtDQUVuRCxxQkFBcUI7Q0FDckIsVUFBVTtDQUNWLDJCQUEyQjtDQUMzQixtQ0FBbUM7Q0FDbkMsVUFBVTtDQUVWLDJDQUEyQztDQUMzQyxzQkFBc0I7Q0FDdEIsOERBQThEO0NBQzlELDZCQUE2QjtDQUM3QixpQkFBaUI7Q0FDakIsb0RBQW9EO0NBQ3BELFVBQVU7Q0FDVixVQUFVO0NBQ1YsTUFBTTtDQUNOLElBQUk7Q0FFSiwrQ0FBK0M7Q0FDL0MsbURBQW1EO0NBQ25ELHNIQUFzSDtDQUN0SCx1QkFBdUI7Q0FDdkIsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL3doYXRzYm90Ly4vcGFnZXMvYXBpL21lc3NhZ2UuanM/ZmRmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgY29uc3QgTWVzc2FnaW5nUmVzcG9uc2UgPSByZXF1aXJlKCd0d2lsaW8nKS50d2ltbC5Wb2ljZVJlc3BvbnNlO1xyXG5cclxuICB2YXIgbWVzc2FnZVJlc3BvbnNlID0gbmV3IE1lc3NhZ2luZ1Jlc3BvbnNlKCk7XHJcblxyXG4gIC8vIG1lc3NhZ2VSZXNwb25zZS5tZXNzYWdlKCdSZXBseSBnb2VzIGhlcmUnKTtcclxuXHJcbiAgLy8gc2VuZCByZXNwb25zZVxyXG4gIHJlcy53cml0ZUhlYWQoMjAwLCB7XHJcbiAgJ0NvbnRlbnQtVHlwZSc6ICd0ZXh0L3htbCdcclxuICB9KTtcclxuICBtZXNzYWdlUmVzcG9uc2UuZGlhbCh7XHJcbiAgICBhY3Rpb246ICcvYXBpL21lc3NhZ2UnLFxyXG4gICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICB0aW1lTGltaXQ6IDYwLFxyXG4gICAgY2FsbGVySWQ6IHJlcS5ib2R5LlRvXHJcbiAgfSwgJys1NTQyOTIwMDAzMDU0Jyk7XHJcblxyXG4gIHJlcy5zZW5kKG1lc3NhZ2VSZXNwb25zZS50b1N0cmluZygpKTtcclxufVxyXG5cclxuLy8gaW1wb3J0IHsgQ29uZmlndXJhdGlvbiwgT3BlbkFJQXBpIH0gZnJvbSBcIm9wZW5haVwiO1xyXG5cclxuLy8gY29uc3QgY29uZmlndXJhdGlvbiA9IG5ldyBDb25maWd1cmF0aW9uKHtcclxuLy8gICBhcGlLZXk6IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZLFxyXG4vLyB9KTtcclxuXHJcbi8vIC8vIGNvbnN0IGNsaWVudCA9IHJlcXVpcmUoJ3R3aWxpbycpKHByb2Nlc3MuZW52LlRXSUxJT19BQ0NPVU5UX1NJRCwgcHJvY2Vzcy5lbnYuVFdJTElPX0FVVEhfVE9LRU4pXHJcblxyXG4vLyBjb25zdCBvcGVuQUkgPSBuZXcgT3BlbkFJQXBpKGNvbmZpZ3VyYXRpb24pO1xyXG4vLyAvLyBodHRwczovL3doYXRzYm90LWthcHBhLnZlcmNlbC5hcHAvYXBpL21lc3NhZ2VcclxuLy8gZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4vLyAgIGNvbnN0IE1lc3NhZ2luZ1Jlc3BvbnNlID0gcmVxdWlyZSgndHdpbGlvJykudHdpbGlvLk1lc3NhZ2luZ1Jlc3BvbnNlXHJcblxyXG4vLyAgIGNvbnN0IHNlbnRNZXNzYWdlID0gcmVxLmJvZHkuQm9keSB8fCAnJztcclxuLy8gICBsZXQgcmVwbHlUb0JlU2VudCA9IFwiXCI7XHJcblxyXG4vLyAgIGlmIChzZW50TWVzc2FnZS50cmltKCkubGVuZ3RoID09PSAwKSB7XHJcbi8vICAgICByZXBseVRvQmVTZW50ID0gXCJXZSBjb3VsZCBub3QgZ2V0IHlvdXIgbWVzc2FnZS4gUGxlYXNlIHRyeSBhZ2FpblwiO1xyXG4vLyAgIH0gZWxzZSB7XHJcbi8vICAgICBjb25zb2xlLmxvZyhcImVudHJvdSBubyBlbHNlXCIpO1xyXG4vLyAgICAgaWYgKCFjb25maWd1cmF0aW9uLmFwaUtleSkge1xyXG4vLyAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbi8vICAgICAgICAgZXJyb3I6IHtcclxuLy8gICAgICAgICAgIG1lc3NhZ2U6IFwiT3BlbkFJIEFQSSBrZXkgbm90IGNvbmZpZ3VyZWRcIixcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgIH0pO1xyXG4vLyAgICAgICByZXR1cm47XHJcbi8vICAgICB9XHJcbi8vICAgICBjb25zb2xlLmxvZyhcInZhbGlkb3UgY2hhdmUgQVBJXCIpO1xyXG5cclxuLy8gICAgIC8vIHRyeSB7XHJcbi8vICAgICBjb25zdCBjb21wbGV0aW9uID0gYXdhaXQgb3BlbkFJLmNyZWF0ZUNvbXBsZXRpb24oe1xyXG4vLyAgICAgICBtb2RlbDogXCJ0ZXh0LWRhdmluY2ktMDAzXCIsIC8vIHJlcXVpcmVkXHJcbi8vICAgICAgIHByb21wdDogYCR7cmVxLmJvZHkuQm9keX1gLCAvLyBjb21wbGV0aW9uIGJhc2VkIG9uIHRoaXNcclxuLy8gICAgICAgdGVtcGVyYXR1cmU6IDAuNiwgLy9cclxuLy8gICAgICAgLy8gbjogMSxcclxuLy8gICAgICAgbWF4X3Rva2VuczogNTAwLFxyXG4vLyAgICAgICBzdG9wOiAnXFxuJ1xyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoSlNPTi5wYXJzZShjb21wbGV0aW9uLmRhdGEuY2hvaWNlc1swXS50ZXh0KSkpO1xyXG4vLyAgICAgcmVwbHlUb0JlU2VudCA9IHJlbW92ZUluY29tcGxldGVUZXh0KGNvbXBsZXRpb24uZGF0YS5jaG9pY2VzWzBdLnRleHQpXHJcblxyXG4vLyAgICAgLy8gfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgIC8vICAgaWYgKGVycm9yLnJlc3BvbnNlKSB7XHJcbi8vICAgICAvLyAgICAgcmVwbHlUb0JlU2VudCA9IGVycm9yLnJlc3BvbnNlLmRhdGEubWVzc2FnZSB8fCBcIlRoZXJlIHdhcyBhbiBpc3N1ZSB3aXRoIHRoZSBzZXJ2ZXJcIlxyXG4vLyAgICAgLy8gICB9IGVsc2Uge1xyXG4vLyAgICAgLy8gICAgIHJlcGx5VG9CZVNlbnQgPSBcIkFuIGVycm9yIG9jY3VycmVkIGR1cmluZyB5b3VyIHJlcXVlc3QuXCI7XHJcbi8vICAgICAvLyAgIH1cclxuLy8gICAgIC8vIH1cclxuLy8gICB9XHJcblxyXG4vLyAgIGNvbnN0IG1lc3NhZ2VSZXNwb25zZSA9IG5ldyBNZXNzYWdpbmdSZXNwb25zZSgpO1xyXG4vLyAgIG1lc3NhZ2VSZXNwb25zZS5tZXNzYWdlKHJlcGx5VG9CZVNlbnQpO1xyXG4vLyAgIC8vIG1lc3NhZ2VSZXNwb25zZS5tZXNzYWdlKCdSZXBseSBnb2VzIGhlcmUnKTtcclxuXHJcbi8vICAgLy8gc2VuZCByZXNwb25zZVxyXG4vLyAgIHRyeSB7XHJcbi8vICAgICByZXMud3JpdGVIZWFkKDIwMCwge1xyXG4vLyAgICAgICAnQ29udGVudC1UeXBlJzogJ3RleHQveG1sJ1xyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgcmVzLmVuZChtZXNzYWdlUmVzcG9uc2UudG9TdHJpbmcoKSk7XHJcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlbmRpbmcgVHdpbGlvIHJlc3BvbnNlOicsIGVycm9yKTtcclxuLy8gICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuLy8gICAgICAgZXJyb3I6IHtcclxuLy8gICAgICAgICBtZXNzYWdlOiBcIkVycm9yIHNlbmRpbmcgVHdpbGlvIHJlc3BvbnNlXCIsXHJcbi8vICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG4vLyAgIH1cclxuLy8gfVxyXG5cclxuLy8gZnVuY3Rpb24gcmVtb3ZlSW5jb21wbGV0ZVRleHQoaW5wdXRTdHJpbmcpIHtcclxuLy8gICBjb25zdCBtYXRjaCA9IGlucHV0U3RyaW5nLm1hdGNoKC9cXGJcXC5cXHNcXGQrL2cpO1xyXG4vLyAgIGNvbnN0IHJlbW92ZUFmdGVyID0gbWF0Y2ggPyBpbnB1dFN0cmluZy5zbGljZSgwLCBpbnB1dFN0cmluZy5sYXN0SW5kZXhPZihtYXRjaFttYXRjaC5sZW5ndGggLSAxXSkpIDogaW5wdXRTdHJpbmc7XHJcbi8vICAgcmV0dXJuIHJlbW92ZUFmdGVyXHJcbi8vIH0iXSwibmFtZXMiOlsiaGFuZGxlciIsInJlcSIsInJlcyIsIk1lc3NhZ2luZ1Jlc3BvbnNlIiwicmVxdWlyZSIsInR3aW1sIiwiVm9pY2VSZXNwb25zZSIsIm1lc3NhZ2VSZXNwb25zZSIsIndyaXRlSGVhZCIsImRpYWwiLCJhY3Rpb24iLCJtZXRob2QiLCJ0aW1lTGltaXQiLCJjYWxsZXJJZCIsImJvZHkiLCJUbyIsInNlbmQiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/message.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/message.js"));
module.exports = __webpack_exports__;

})();